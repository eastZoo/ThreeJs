/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./public/models/test.gltf
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GUI } from "dat.gui";

const Test = (props) => {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("./models/test.gltf");
  const { actions, names } = useAnimations(animations, group);
  const [mesh, setMesh] = useState(nodes.pCube1001.morphTargetInfluences);

  // 드래그 처음 세팅 시작 값
  var params = {
    morphTarget: 0,
  };

  useEffect(() => {
    // actions[names[0]].reset().fadeIn(0.5).play();
    setMesh(nodes.pCube1001.morphTargetInfluences);
    let gui = new GUI();
    let morphFolder = gui.addFolder("체형크기");
    morphFolder
      .add(params, "morphTarget", 0, 1)
      .step(0.1)
      .onChange(function (value) {
        mesh[0] = value;
      });
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="pCube1001"
          geometry={nodes.pCube1001.geometry}
          material={materials["lambert1.001"]}
          morphTargetDictionary={nodes.pCube1001.morphTargetDictionary}
          morphTargetInfluences={mesh}
          rotation={[Math.PI / 2, 0, 0]}
        />
      </group>
    </group>
  );
};

export default Test;

useGLTF.preload("./models/test.gltf");
